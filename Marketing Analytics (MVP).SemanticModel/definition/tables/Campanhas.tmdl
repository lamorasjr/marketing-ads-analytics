table Campanhas
	lineageTag: acedde21-94a6-4caf-afbf-1f5f439bd72f

	column 'Id Act Conta de Anúncio'
		dataType: string
		lineageTag: bc3bc5ab-3d60-486c-9edb-74597db11fde
		summarizeBy: none
		sourceColumn: Id Act Conta de Anúncio

		annotation SummarizationSetBy = Automatic

	column 'Id Conta de Anúncio'
		dataType: int64
		formatString: 0
		lineageTag: a897a825-c787-464b-b309-6801603ab0f0
		summarizeBy: sum
		sourceColumn: Id Conta de Anúncio

		annotation SummarizationSetBy = Automatic

	column 'Campanha Id'
		dataType: int64
		formatString: 0
		lineageTag: 639bd575-369b-4b9e-bf26-671a5bb950ad
		summarizeBy: count
		sourceColumn: Campanha Id

		annotation SummarizationSetBy = Automatic

	column 'Campanha Nome'
		dataType: string
		lineageTag: cdbd1770-af06-4123-8d69-7412ed083fb6
		summarizeBy: none
		sourceColumn: Campanha Nome

		annotation SummarizationSetBy = Automatic

	column 'Objetivo de Campanha'
		dataType: string
		lineageTag: 71cdac8c-0efc-439b-a1f3-fa001348ba7a
		summarizeBy: none
		sourceColumn: Objetivo de Campanha

		annotation SummarizationSetBy = Automatic

	column 'Tipo de Compra'
		dataType: string
		lineageTag: 9c7dfc93-49bb-4bf3-accc-f114d2995359
		summarizeBy: none
		sourceColumn: Tipo de Compra

		annotation SummarizationSetBy = Automatic

	column 'Estratégia de Otmimização'
		dataType: string
		lineageTag: 886931a6-8b1f-4dd3-91de-2eba79af243f
		summarizeBy: none
		sourceColumn: Estratégia de Otmimização

		annotation SummarizationSetBy = Automatic

	column 'Orçamento Diário'
		dataType: double
		lineageTag: 735f3316-ca04-49d8-8b9d-149e10ec40bb
		summarizeBy: sum
		sourceColumn: Orçamento Diário

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Categoria Especial de Anúncio'
		dataType: string
		lineageTag: 27299efa-0cb9-4630-a5c1-845279945140
		summarizeBy: none
		sourceColumn: Categoria Especial de Anúncio

		annotation SummarizationSetBy = Automatic

	column Status
		dataType: string
		lineageTag: 46f433ba-797f-41d2-addb-ce0ec2945765
		summarizeBy: none
		sourceColumn: Status

		annotation SummarizationSetBy = Automatic

	column 'Data de Criação'
		dataType: dateTime
		formatString: Long Date
		lineageTag: 8de3aae2-cd16-4c52-ae04-4bbdd0e24dc0
		summarizeBy: none
		sourceColumn: Data de Criação

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Data de Veiculação'
		dataType: dateTime
		formatString: Long Date
		lineageTag: 9b7ac9e2-4bee-445b-a1aa-7439b47fc3eb
		summarizeBy: none
		sourceColumn: Data de Veiculação

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Data de Pausa'
		dataType: dateTime
		formatString: Long Date
		lineageTag: 787702a9-22ba-4381-bd15-5ee32daffdf8
		summarizeBy: none
		sourceColumn: Data de Pausa

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Data da Última Atualização'
		dataType: dateTime
		formatString: Long Date
		lineageTag: a87ea264-7c0d-4fc9-a8a5-ce9d7d4c0556
		summarizeBy: none
		sourceColumn: Data da Última Atualização

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Id Campanha de Origem'
		dataType: int64
		formatString: 0
		lineageTag: d75b274e-57c8-46e2-8b15-41b1d0988693
		summarizeBy: sum
		sourceColumn: Id Campanha de Origem

		annotation SummarizationSetBy = Automatic

	partition Campanhas = m
		mode: import
		source = ```
				let
				// API parameters
				    Base_url = "https://graph.facebook.com/v20.0/",
				    Endpoint_url = "/campaigns",
				    Fields = "account_id,id,name,objective,buying_type,bid_strategy,daily_budget,special_ad_category,status,created_time,start_time,stop_time,updated_time,source_campaign_id",
				    Limit = "1000",
				    Date_preset = "maximum",
				            
				// Get API data functions
				    fn_get_api_data = ( Adaccount_id as text, Page_cursor as text) =>
				        Json.Document(
				            Web.Contents( 
				                Base_url,
				                [
				                    RelativePath = Adaccount_id & Endpoint_url,
				                    Headers = [ Authorization = "Bearer " & access_token ], 
				                    Query = [ date_preset=Date_preset, fields=Fields, limit=Limit, after=Page_cursor ] 
				                ] 
				            )
				        ),
				
				// Get API paginated results
				    fn_get_api_data_loop = ( Adaccount_id as text ) =>
				        List.Generate(
				            () => [
				                api_data = fn_get_api_data( Adaccount_id , "" ),   // Adjust the addacoun parameter here
				                api_cursor = ""
				            ],
				            each List.Count( [api_data][data] ) > 0,
				            each [ 
				                api_data = fn_get_api_data( Adaccount_id , [api_data][paging][cursors][after] ),   // Adjust the addacoun parameter here
				                api_cursor = [api_data][paging][cursors][after]
				            ],
				            each Table.FromRecords({[ api_data = [api_data][data], api_cursor = [api_data][paging][cursors][after] ]})
				        ),
				        
				// Get data from all user ad account
				    Source = Table.AddColumn(customer_adaccounts, "API data", each fn_get_api_data_loop([Customer Ad Account])),
				    #"Expanded API data" = Table.ExpandListColumn(Source, "API data"),
				    #"Expanded API data1" = Table.ExpandTableColumn(#"Expanded API data", "API data", {"api_data", "api_cursor"}, {"api_data", "api_cursor"}),
				    #"Expanded api_data" = Table.ExpandListColumn(#"Expanded API data1", "api_data"),
				    #"Expanded api_data1" = Table.ExpandRecordColumn(#"Expanded api_data", "api_data", {"account_id", "id", "name", "objective", "buying_type", "bid_strategy", "daily_budget", "special_ad_category", "status", "created_time", "start_time", "stop_time", "updated_time", "source_campaign_id"}, {"account_id", "id", "name", "objective", "buying_type", "bid_strategy", "daily_budget", "special_ad_category", "status", "created_time", "start_time", "stop_time", "updated_time", "source_campaign_id"}),
				    #"Removed Columns" = Table.RemoveColumns(#"Expanded api_data1",{"api_cursor"}),
				    #"Changed Type" = Table.TransformColumnTypes(#"Removed Columns",{{"Customer Ad Account", type text}, {"account_id", Int64.Type}, {"id", Int64.Type}, {"name", type text}, {"objective", type text}, {"buying_type", type text}, {"bid_strategy", type text}, {"daily_budget", Int64.Type}, {"special_ad_category", type text}, {"status", type text}, {"created_time", type datetimezone}, {"start_time", type datetimezone}, {"stop_time", type datetimezone}, {"updated_time", type datetimezone}, {"source_campaign_id", Int64.Type}}),
				    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"account_id", "Id Conta de Anúncio"}, {"id", "Campanha Id"}, {"name", "Campanha Nome"}, {"objective", "Objetivo de Campanha"}, {"buying_type", "Tipo de Compra"}, {"bid_strategy", "Estratégia de Otmimização"}, {"daily_budget", "Orçamento Diário"}, {"special_ad_category", "Categoria Especial de Anúncio"}, {"status", "Status"}, {"created_time", "Data de Criação"}, {"start_time", "Data de Veiculação"}, {"stop_time", "Data de Pausa"}, {"updated_time", "Data da Última Atualização"}, {"source_campaign_id", "Id Campanha de Origem"}, {"Customer Ad Account", "Id Act Conta de Anúncio"}}),
				    #"Changed Type1" = Table.TransformColumnTypes(#"Renamed Columns",{{"Data de Criação", type date}, {"Data de Veiculação", type date}, {"Data de Pausa", type date}, {"Data da Última Atualização", type date}}),
				    #"Divided Column" = Table.TransformColumns(#"Changed Type1", {{"Orçamento Diário", each _ / 100, type number}})
				in
				    #"Divided Column"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

